parameters:
    metagist.web.controller.class: Metagist\ServerBundle\Controller\WebController
    metagist.contribute.controller.class: Metagist\ServerBundle\Controller\ContributeController
    metagist.admin.controller.class: Metagist\ServerBundle\Controller\AdminController
    metagist.categoryschema.class: Metagist\ServerBundle\Validation\CategorySchema
    
services:
  
  twig.extension.text:
      class: Twig_Extensions_Extension_Text
      tags:
                - { name: twig.extension }
                
  metagist.listener.exception_listener:
        class: Metagist\ServerBundle\Listener\ExceptionListener
        arguments: ["@templating", "@logger"]
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
            
  metagist.controller.serviceprovider:
    class:     Metagist\ServerBundle\Controller\ServiceProvider
    arguments: ["@service_container"]
    
  metagist.categoryschema:
    class:     "%metagist.categoryschema.class%"
    factory_class:  "%metagist.categoryschema.class%"
    factory_method: create
    arguments: [%kernel.root_dir%/../web/bundles/metagistserver/metainfo.json]
    
  metagist.validator:
    class:     Metagist\ServerBundle\Validation\Validator
    arguments: ["@metagist.categoryschema"]
    
  metagist_twig_iconextension:
    class:     Metagist\ServerBundle\Twig\Extension\IconExtension
    arguments: [%category.icons.mapping%]
    tags:
      - { name: twig.extension }
  
  metagist_twig_metainfosextension:
    class:     Metagist\ServerBundle\Twig\Extension\MetaInfosExtension
    arguments: [%category.render.mapping%]
    tags:
      - { name: twig.extension }

  metagist.web.controller:
    class:     "%metagist.web.controller.class%"
    arguments: ["@metagist.controller.serviceprovider"]
    calls:
      - [setContainer, ["@service_container"]]
  
  metagist.contribute.controller:
    class:     "%metagist.contribute.controller.class%"
    arguments: ["@metagist.controller.serviceprovider"]
    calls:
      - [setContainer, ["@service_container"]]
  
  metagist.admin.controller:
    class:     "%metagist.admin.controller.class%"
    arguments: ["@metagist.controller.serviceprovider"]
    calls:
      - [setContainer, ["@service_container"]]
  
  metagist.user.repository:
        class:           Metagist\ServerBundle\Entity\UserRepository
        factory_service: doctrine.orm.entity_manager
        factory_method:  getRepository
        arguments: ["MetagistServerBundle:User"]
            
  metagist.user.provider.entity:
    class: Metagist\ServerBundle\Entity\UserProvider
    arguments: ["@metagist.user.repository", %metagist.server.admins%]
    
  metagist.opauth.listener:
    class: Metagist\ServerBundle\EventListener\OpauthListener
    arguments: ["@doctrine.orm.entity_manager"]
      